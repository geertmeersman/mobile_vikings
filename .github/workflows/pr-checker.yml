name: PR - Assign and check labels

on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  assign_labels:
    name: Assign SemVer labels
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: ⤵️ Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get commit messages
        id: commit_messages
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          COMMIT_MESSAGES=$(curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/commits" | \
            jq -r '.[].commit.message')
          echo "$COMMIT_MESSAGES" > COMMIT_MESSAGES
          echo "$COMMIT_MESSAGES"

      - name: Determine SemVer level
        id: semver_level
        run: |
          result=$(python .github/scripts/pr_extract_labels.py)
          echo "Result: $result"
          semver=$(echo "$result" | jq -r .semver)
          types=$(echo "$result" | jq -c .types)
          echo "semver=$semver" >> "$GITHUB_OUTPUT"
          echo "types=$types" >> "$GITHUB_OUTPUT"

      - name: Delete commit messages file
        run: rm COMMIT_MESSAGES

      - name: Assign SemVer label (remove old first)
        uses: actions/github-script@v8
        with:
          script: |
            const semverLabels = ["major", "minor", "patch"];
            const prNumber = context.issue.number;

            // Get current labels on the PR
            const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            // Remove existing SemVer labels
            for (const label of currentLabels) {
              if (semverLabels.includes(label.name)) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  name: label.name
                });
              }
            }

            // Add the new SemVer label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: [ "${{ steps.semver_level.outputs.semver }}" ]
            });

  check_semver_labels:
    name: Check SemVer labels in PR
    needs: assign_labels
    runs-on: ubuntu-latest
    steps:
      - name: Check for SemVer labels
        uses: danielchabr/pr-labels-checker@v3.3
        with:
          hasSome: major,minor,patch
          githubToken: ${{ secrets.GITHUB_TOKEN }}
