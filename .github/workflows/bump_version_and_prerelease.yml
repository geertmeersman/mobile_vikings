name: Release - Bump and BETA

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create_beta_release:
    name: Bump and BETA release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: ‚§µÔ∏è Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: dev-current

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: üî¢ Calculate next beta version
        id: next-version
        run: |
          pip install requests
          NEXT_VERSION=$(python .github/scripts/calc_next_version.py)
          echo "Next beta version: $NEXT_VERSION"
          echo "NEW_VERSION=$NEXT_VERSION" >> "$GITHUB_OUTPUT"

      - name: üìù Generate changelog from merged PRs
        id: changelog
        run: |
          python .github/scripts/generate_changelog.py dev-current
          CHANGELOG=$(python .github/scripts/generate_changelog.py dev-current)
          echo "CHANGELOG<<EOF" >> "$GITHUB_OUTPUT"
          echo "$CHANGELOG" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: üîÑ Update version in 'VERSION' and 'manifest.json'
        env:
          NEXT_VERSION: ${{ steps.next-version.outputs.NEW_VERSION }}
          GITHUB_REPO: ${{ github.event.repository.name }}
        run: |
          echo $NEXT_VERSION > VERSION
          sed -i 's/"version": ".*"/"version": "'$NEXT_VERSION'"/g' custom_components/$GITHUB_REPO/manifest.json
          cat custom_components/$GITHUB_REPO/manifest.json

      - name: üöÄ Commit version bump
        uses: EndBug/add-and-commit@v9
        with:
          message: "Bump version to ${{ steps.next-version.outputs.NEW_VERSION }}"

      - name: üóë Delete draft releases
        uses: hugo19941994/delete-draft-releases@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìù Publish beta release
        uses: release-drafter/release-drafter@v6
        id: release_published
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter-beta.yml
          prerelease: true
          publish: true
          commitish: dev-current
          tag: ${{ steps.next-version.outputs.NEW_VERSION }}
          name: "Beta ${{ steps.next-version.outputs.NEW_VERSION }}"
          footer: "${{ steps.next-version.outputs.CHANGELOG }}"

      - name: üì¶ Create zip file
        run: |
          cd custom_components/${{ github.event.repository.name }}
          zip -r "${{ github.event.repository.name }}-beta-${{ steps.next-version.outputs.NEW_VERSION }}.zip" .
          mv "${{ github.event.repository.name }}-beta-${{ steps.next-version.outputs.NEW_VERSION }}.zip" ../..

      - name: üìé Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: "${{ github.event.repository.name }}-beta-${{ steps.next-version.outputs.NEW_VERSION }}.zip"

      - name: üìù Update release with zip file
        run: |
          gh release upload ${{ steps.next-version.outputs.NEW_VERSION }} "${{ github.event.repository.name }}-beta-${{ steps.next-version.outputs.NEW_VERSION }}.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üöÄ Discord notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_BETA }}
          NEXT_VERSION: ${{ steps.next-version.outputs.NEW_VERSION }}
        with:
          args: "New BETA release published: https://github.com/{{ EVENT_PAYLOAD.repository.full_name }}/releases/tag/${{ steps.next-version.outputs.NEW_VERSION }}"
